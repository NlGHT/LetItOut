name: Build platforms

on:
  push:
    branches:
      - main
      
env:
  VERSION_NUMBER: 0.5
  QT_VERSION: 6.3.1
  PROJECT: "LetItOut"
  

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '${{ env.QT_VERSION }}'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_mingw'
          dir: '${{ github.workspace }}/'
          install-deps: 'true'
          cache: 'true'
          cache-key-prefix: 'install-qt-action'
          setup-python: 'true'
          tools: 'tools_cmake tools_mingw90 tools_ninja'
          archives: 'qttools qtbase MinGW'
          set-env: 'true'
          tools-only: 'false'
          aqtversion: '==3.1.*'
          py7zrversion: '==0.20.*'
          extra: '--external 7z'
      - name: Build
        shell: cmd
        run: |
          dir
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release ..
          cmake --build .
      - name: Deploy
        shell: cmd
        run: |
          "Qt\${{ env.QT_VERSION }}\win64_mingw\bin\windeployqt.exe" build/${{ env.PROJECT }}.exe
          dir "build"
      - name: Tar build
        shell: cmd
        run: |
          "C:\Windows\System32\tar.exe" -cvf windows_build.tar build
      - name: Archive Windows binaries
        uses: actions/upload-artifact@v3
        with:
          name: windows-binaries
          path: "windows_build.tar"
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '${{ env.QT_VERSION }}'
          host: 'linux'
          target: 'desktop'
          arch: 'gcc_64'
          dir: '${{ github.workspace }}/'
          install-deps: 'true'
          cache: 'true'
          cache-key-prefix: 'install-qt-action'
          setup-python: 'true'
          tools: 'tools_cmake tools_ninja'
          set-env: 'true'
          tools-only: 'false'
          aqtversion: '==3.1.*'
          py7zrversion: '==0.20.*'
          extra: '--external 7z'
      - name: Build
        shell: sh
        run: |
          dir
          mkdir build
          "Qt\Tools\CMake_64\bin\cmake.exe" -S . -B build "-DCMAKE_GENERATOR:STRING=Ninja" "-DCMAKE_BUILD_TYPE:STRING=Release" "-DQT_QMAKE_EXECUTABLE:FILEPATH=Qt/${{ env.QT_VERSION }}/mingw_64/bin/qmake.exe" "-DCMAKE_PREFIX_PATH:PATH=Qt/${{ env.QT_VERSION }}/mingw_64" "-DCMAKE_C_COMPILER:FILEPATH=Qt/Tools/mingw1120_64/bin/gcc.exe" "-DCMAKE_CXX_COMPILER:FILEPATH=Qt/Tools/mingw1120_64/bin/g++.exe"
          cmake --build .
          cd ..
      - name: Tar build
        run: tar -cvf linux_build.tar build

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux-binaries
          path: linux_build.tar  
  release:
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Download Windows binaries
        uses: actions/download-artifact@v3
        with:
          name: windows-binaries
          path: windows-binaries

      - name: Download Linux binaries
        uses: actions/download-artifact@v3
        with:
          name: linux-binaries
          path: linux-binaries
      - name: Examine files
        shell: sh
        run: |
          ls
